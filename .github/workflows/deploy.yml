name: Deploy mazacofo

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create .env file
      run: |
        touch .env
        echo "MYSQL_HOST=$MYSQL_HOST" >> .env
        echo "MYSQL_USER=$MYSQL_USER" >> .env
        echo "MYSQL_PW=$MYSQL_PW" >> .env
        echo "MYSQL_DB=$MYSQL_DB" >> .env
        echo "WEBHOOK_URL=$WEBHOOK_URL" >> .env
      env:
        MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PW: ${{ secrets.MYSQL_PW }}
        MYSQL_DB: ${{ secrets.MYSQL_DB }}
        WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ap-northeast-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push image to ECR - client
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: mazacofo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.4
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ github.sha }}
        REPOSITORY: mazacofo
        PORT_: 2021
      with:
        host: ${{ secrets.SERVER_HOST }}          
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        envs: REGISTRY, TAG, REPOSITORY, PORT_
        script: | 
          if [ "$( docker container inspect -f '{{.State.Status}}' $REPOSITORY )" == "running" ]; then 
            docker container stop $REPOSITORY
            docker container rm $REPOSITORY
          fi
          docker image rmi $(docker images '$REGISTRY/$REPOSITORY')

          aws ecr get-login-password --region ap-northeast-2 \
            | docker login --username AWS --password-stdin 889566267001.dkr.ecr.ap-northeast-2.amazonaws.com

          docker pull $REGISTRY/$REPOSITORY:$TAG
          docker run -d --name $REPOSITORY -p $PORT_:$PORT_ $REGISTRY/$REPOSITORY:$TAG
